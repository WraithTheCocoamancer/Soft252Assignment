/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;
import org.json.simple.*;
import org.json.simple.parser.*;
/**
 *
 * @author mhill9
 */
import model.AdminList;
import model.DoctorList;
import model.PatientList;
import model.SecretaryList;
public class HospitalGui extends javax.swing.JFrame {

    /**
     * Creates new form HospitalGui
     */
    public HospitalGui() {
        initComponents();
        getData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        UserComboBox = new javax.swing.JComboBox<>();
        LogIn = new javax.swing.JButton();
        PasswordField = new javax.swing.JTextField();
        IDField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        LogInFailText = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        UserComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrator", "Doctor", "Secretary", "Patient" }));
        UserComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserComboBoxActionPerformed(evt);
            }
        });

        LogIn.setText("Log In");
        LogIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogInActionPerformed(evt);
            }
        });

        PasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordFieldActionPerformed(evt);
            }
        });

        IDField.setActionCommand("<Not Set>");
        IDField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("ID number");

        jLabel2.setText("Password");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(IDField, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LogInFailText, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LogIn, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(UserComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(UserComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(32, 32, 32)
                .addComponent(LogInFailText, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(LogIn)
                .addGap(69, 69, 69))
        );

        LogIn.getAccessibleContext().setAccessibleName("LogInBtn");
        jLabel1.getAccessibleContext().setAccessibleName("Label ID");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UserComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserComboBoxActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_UserComboBoxActionPerformed

    private void PasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordFieldActionPerformed

    AdminList Admins = new AdminList();
    DoctorList Doctors = new DoctorList();
    PatientList Patients = new PatientList();
    SecretaryList Secretarys = new SecretaryList();
    
    private void getData(){
        Doctors.doctorlist();
        Admins.adminList();
        Patients.patientlist();
        Secretarys.secretarylist();
    }
    
    
    private void LogInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogInActionPerformed
        // TODO add your handling code here:
        UserComboBox.getSelectedIndex();
        PasswordField.getText();
        IDField.getText();
        String Letter = "A";
        int n = 0;
        if (UserComboBox.getSelectedItem().equals("Administrator")) {
            Letter = "A"; //converting easy to understand dropdown to tags used to identify role
            n = Admins.AdminList.size()  ; // the -1 is to make it match the for loop
        }
        else if (UserComboBox.getSelectedItem().equals("Doctor")){
            Letter = "D";
            n = Doctors.DoctorList.size() ;
            System.out.println(Doctors.DoctorList.size());
        }
         else if (UserComboBox.getSelectedItem().equals("Patient")){
            Letter = "P";
            n = Patients.PatientList.size() ;
        }
         else if (UserComboBox.getSelectedItem().equals("Secretary")){
            Letter = "S";
            n = Secretarys.SecretaryList.size() ;
        }
        System.out.println(n);
        int NoOfAdmins = Admins.AdminList.size();
        int NoOfDoctors = Doctors.DoctorList.size();
        int NoOfPatients = Patients.PatientList.size();
        int NoOfSecretarys = Secretarys.SecretaryList.size();
        for (int i = 0; i < n; i++) {
            if(i >= NoOfAdmins)
            {
            }
            else{
        if (PasswordField.getText().equals(Admins.AdminList.get(i).getPreferedPassword()) && IDField.getText().equals(String.valueOf(Admins.AdminList.get(i).getUserId())) && Letter.equals("A")) 
        {
            System.out.println(Admins.AdminList.get(i).getUserId());
            System.out.println(Admins.AdminList.get(i).getPreferedPassword());
            System.out.println(Admins.AdminList.get(i).getLetter());
            this.setVisible(false);
        new MainPageGuiAdmin().setVisible(true);
        }   
        }
            if(i >= NoOfDoctors)
            {
            }
            else{
        if(PasswordField.getText().equals(Doctors.DoctorList.get(i).getPreferedPassword()) && IDField.getText().equals(String.valueOf(Doctors.DoctorList.get(i).getUserId())) && Letter.equals("D"))
        {
            System.out.println(Doctors.DoctorList.get(i).getUserId());
            System.out.println(Doctors.DoctorList.get(i).getPreferedPassword());
            System.out.println(Doctors.DoctorList.get(i).getLetter());
             this.setVisible(false);
        new MainPageGuiDoctor().setVisible(true);
        }
            }if(i >= NoOfPatients)
            {
            }
            else{
            
        if(PasswordField.getText().equals(Patients.PatientList.get(i).getPreferedPassword()) && IDField.getText().equals(String.valueOf(Patients.PatientList.get(i).getUserId()))  && Letter.equals("P"))
        {
            System.out.println(Patients.PatientList.get(i).getUserId());
            System.out.println(Patients.PatientList.get(i).getPreferedPassword());
            System.out.println(Patients.PatientList.get(i).getLetter());
             this.setVisible(false);
        new MainPageGuiPatient().setVisible(true);
        }
            }
        if(i >= NoOfSecretarys)
            {
            }
            else{
        if (PasswordField.getText().equals(Secretarys.SecretaryList.get(i).getPreferedPassword()) && IDField.getText().equals(String.valueOf(Secretarys.SecretaryList.get(i).getUserId())) && Letter.equals("S"))
        {
            System.out.println(Secretarys.SecretaryList.get(i).getUserId());
            System.out.println(Secretarys.SecretaryList.get(i).getPreferedPassword());
            System.out.println(Secretarys.SecretaryList.get(i).getLetter());
             this.setVisible(false);
        new MainPageGuiSecretary().setVisible(true);
        }
        
        else 
        {
        LogInFailText.setText("log in Failed. Please try again!");
        }
        }
        } 
    }//GEN-LAST:event_LogInActionPerformed

    private void IDFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HospitalGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HospitalGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HospitalGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HospitalGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HospitalGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IDField;
    private javax.swing.JButton LogIn;
    private javax.swing.JLabel LogInFailText;
    private javax.swing.JTextField PasswordField;
    private javax.swing.JComboBox<String> UserComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
